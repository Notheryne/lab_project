{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\Character.jsx\";\nimport React from 'react';\nimport '../styles/Character.css';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { CHARACTER_PATH } from \"../constants/routes\";\nimport Image from \"react-bootstrap/Image\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass Character extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getItemImagePath = gameItemType => {\n      return this.state.characterData['items'][gameItemType]['image_path'];\n    };\n\n    this.state = {\n      characterData: {},\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.sendGetRequest(CHARACTER_PATH).then(response => {\n      this.setState({\n        characterData: response['data']\n      });\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.characterData);\n\n    if (!this.state.isLoading) {\n      return React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.state.characterData['name']))), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"1\",\n        className: \"character-head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Image, {\n        height: 50,\n        src: this.getItemImagePath('helmet'),\n        alt: \"character helmet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"character-amulet character-item-view\",\n        height: 25,\n        src: this.getItemImagePath('amulet'),\n        alt: \"character amulet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })))));\n    } else {\n      return React.createElement(Spinner, {\n        className: \"loading-spinner\",\n        animation: \"border\",\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Character;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/Character.jsx"],"names":["React","Jumbotron","Container","Row","Col","CHARACTER_PATH","Image","Spinner","Character","Component","constructor","props","getItemImagePath","gameItemType","state","characterData","isLoading","componentDidMount","sendGetRequest","then","response","setState","render","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../styles/Character.css';\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {CHARACTER_PATH} from \"../constants/routes\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nclass Character extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            characterData: {},\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.sendGetRequest(CHARACTER_PATH)\r\n            .then((response) => {\r\n                this.setState({characterData: response['data']});\r\n                this.setState({isLoading: false});\r\n            })\r\n    }\r\n\r\n    getItemImagePath = (gameItemType) => {\r\n        return this.state.characterData['items'][gameItemType]['image_path'];\r\n    };\r\n    render() {\r\n        console.log(this.state.characterData);\r\n        if (!this.state.isLoading) {\r\n            return (\r\n                <Jumbotron>\r\n                    <Container>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col md=\"auto\">\r\n                                <h3>{this.state.characterData['name']}</h3>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col lg=\"1\" className=\"character-head\">\r\n                                <Image\r\n                                    height={50}\r\n                                    src={this.getItemImagePath('helmet')}\r\n                                    alt=\"character helmet\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col md=\"\">\r\n                                <Image\r\n                                    className=\"character-amulet character-item-view\"\r\n                                    height={25}\r\n                                    src={this.getItemImagePath('amulet')}\r\n                                    alt=\"character amulet\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        {/*<Row className=\"justify-content-center\">*/}\r\n                        {/*    <Col md=\"auto\">*/}\r\n                        {/*    <Image*/}\r\n                        {/*            className=\"character-hand character-item-view\"*/}\r\n                        {/*            src={this.getItemImagePath('weapon')}*/}\r\n                        {/*            alt=\"character weapon\"*/}\r\n                        {/*        />*/}\r\n                        {/*    </Col>*/}\r\n\r\n                        {/*    <Col md=\"auto\">*/}\r\n                        {/*    <Image*/}\r\n                        {/*            className=\"character-armor character-item-view\"*/}\r\n                        {/*            src={this.getItemImagePath('armor')}*/}\r\n                        {/*            alt=\"character weapon\"*/}\r\n                        {/*        />*/}\r\n                        {/*    </Col>*/}\r\n\r\n                        {/*    <Col md=\"auto\">*/}\r\n                        {/*    <Image*/}\r\n                        {/*            className=\"character-hand character-item-view\"*/}\r\n                        {/*            src={this.getItemImagePath('shield')}*/}\r\n                        {/*            alt=\"character weapon\"*/}\r\n                        {/*        />*/}\r\n                        {/*    </Col>*/}\r\n                        {/*</Row>*/}\r\n                    </Container>\r\n                </Jumbotron>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Spinner\r\n                    className='loading-spinner'\r\n                    animation=\"border\"\r\n                    variant=\"primary\"\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Character;"]},"metadata":{},"sourceType":"module"}