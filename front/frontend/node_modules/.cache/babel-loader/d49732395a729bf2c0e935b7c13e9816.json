{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\Expedition.jsx\";\nimport React from 'react';\nimport '../styles/Expedition.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { ENEMY_STAT_DISPLAY_NAME, EXPEDITION_FIGHT_PATH, EXPEDITION_PATH } from \"../constants/routes\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { Image } from \"react-bootstrap\";\nimport CharacterStats from \"./SubComponents/CharacterStats\";\nimport Button from \"react-bootstrap/Button\";\nimport FightResult from \"./SubComponents/FightResult\";\n\nclass Expedition extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.performMonsterFight = () => {\n      this.props.sendPostRequest(EXPEDITION_FIGHT_PATH, {\n        defender_id: this.state.enemyData['id']\n      }).then(response => {\n        this.setState({\n          fightData: response['data']\n        });\n        this.setState({\n          showResult: true\n        });\n        this.setState({\n          buttonActive: false\n        });\n      }).catch(error => {\n        this.setState({\n          status: error.response['data']['message']\n        });\n      });\n    };\n\n    this.state = {\n      enemyData: {},\n      fightData: {},\n      buttonActive: false,\n      showResult: false,\n      isLoading: true,\n      status: 'STATUS'\n    };\n  }\n\n  componentDidMount() {\n    this.props.sendGetRequest(EXPEDITION_PATH).then(response => {\n      this.setState({\n        enemyData: response['data']['enemy']\n      });\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  render() {\n    if (!this.state.isLoading) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: this.state.enemyData['image_path'],\n        alt: \"monster image\",\n        height: 350,\n        width: 250,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.enemyData['name'])), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CharacterStats, {\n        toRender: ENEMY_STAT_DISPLAY_NAME,\n        characterData: this.state.enemyData,\n        sendPostRequest: this.props.sendPostRequest,\n        manageStats: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: {\n          span: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Button, {\n        block: true,\n        variant: \"warning\",\n        onClick: this.performMonsterFight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Attack\"))), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.status)), React.createElement(FightResult, {\n        show: this.state.showResult,\n        fightCourse: this.state.fightData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(Spinner, {\n        animation: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Expedition;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/Expedition.jsx"],"names":["React","Row","Col","ENEMY_STAT_DISPLAY_NAME","EXPEDITION_FIGHT_PATH","EXPEDITION_PATH","Spinner","Image","CharacterStats","Button","FightResult","Expedition","Component","constructor","props","performMonsterFight","sendPostRequest","defender_id","state","enemyData","then","response","setState","fightData","showResult","buttonActive","catch","error","status","isLoading","componentDidMount","sendGetRequest","console","log","render","span"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../styles/Expedition.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {ENEMY_STAT_DISPLAY_NAME, EXPEDITION_FIGHT_PATH, EXPEDITION_PATH} from \"../constants/routes\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport {Image} from \"react-bootstrap\";\r\nimport CharacterStats from \"./SubComponents/CharacterStats\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FightResult from \"./SubComponents/FightResult\";\r\n\r\nclass Expedition extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            enemyData: {},\r\n            fightData: {},\r\n            buttonActive: false,\r\n            showResult: false,\r\n            isLoading: true,\r\n            status: 'STATUS',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.sendGetRequest(EXPEDITION_PATH)\r\n            .then((response) => {\r\n                this.setState({enemyData: response['data']['enemy']});\r\n                this.setState({isLoading: false});\r\n            }).catch((error) => {\r\n                console.log(error.response);\r\n        })\r\n    }\r\n\r\n    performMonsterFight = () => {\r\n        this.props.sendPostRequest(EXPEDITION_FIGHT_PATH, {defender_id: this.state.enemyData['id']})\r\n            .then((response) => {\r\n                this.setState({fightData: response['data']});\r\n                this.setState({showResult: true});\r\n                this.setState({buttonActive: false});\r\n            }).catch((error) => {\r\n            this.setState({status: error.response['data']['message']});\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Row className=\"justify-content-center\">\r\n                          <Image\r\n                                src={this.state.enemyData['image_path']}\r\n                                alt=\"monster image\"\r\n                                height={350}\r\n                                width={250}\r\n                            />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <h3>{this.state.enemyData['name']}</h3>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <CharacterStats\r\n                            toRender={ENEMY_STAT_DISPLAY_NAME}\r\n                            characterData={this.state.enemyData}\r\n                            sendPostRequest={this.props.sendPostRequest}\r\n                            manageStats={false}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md={{span: 3}}>\r\n                            <Button\r\n                                block\r\n                                variant=\"warning\"\r\n                                onClick={this.performMonsterFight}\r\n                            >\r\n                                Attack\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                     <Row className=\"justify-content-center\">\r\n                         <p>{this.state.status}</p>\r\n                     </Row>\r\n                    <FightResult\r\n                        show={this.state.showResult}\r\n                        fightCourse={this.state.fightData}\r\n                    />\r\n                </React.Fragment>\r\n\r\n            );\r\n        } else {\r\n            return <Spinner  animation=\"primary\"/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Expedition;"]},"metadata":{},"sourceType":"module"}