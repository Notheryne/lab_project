{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\Character.jsx\";\nimport React from 'react';\nimport '../styles/Character.css';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { CHARACTER_PATH, ITEM_STAT_DISPLAY_NAME } from \"../constants/routes\";\nimport Image from \"react-bootstrap/Image\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\n\nclass Character extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getItemImagePath = gameItemType => {\n      return this.state.characterData['items'][gameItemType]['image_path'];\n    };\n\n    this.getItemDescription = gameItemType => {\n      const item = this.state.characterData['items'][gameItemType];\n      let stats = \"\";\n      Object.keys(ITEM_STAT_DISPLAY_NAME).map(function (statName, statDisplayName) {\n        stats += {\n          statDisplayName\n        } + ': ' + item[statName] + \"<br />\";\n      });\n      return React.createElement(Tooltip, {\n        id: \"tooltip-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, item['name']), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, item['slot']));\n    };\n\n    this.state = {\n      characterData: {},\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.sendGetRequest(CHARACTER_PATH).then(response => {\n      this.setState({\n        characterData: response['data']\n      });\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.characterData);\n\n    if (!this.state.isLoading) {\n      return React.createElement(Jumbotron, {\n        className: \"character-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.characterData['name']))), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        trigger: \"hover\",\n        placement: \"bottom\",\n        overlay: this.getItemDescription('helmet'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: this.getItemImagePath('helmet'),\n        height: 50,\n        alt: \"character helmet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: {\n          offset: 6\n        },\n        md: {\n          offset: 6\n        },\n        sm: {\n          offset: 6\n        },\n        xl: {\n          offset: 6\n        },\n        xs: {\n          offset: 6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: this.getItemImagePath('amulet'),\n        height: 40,\n        alt: \"character amulet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: this.getItemImagePath('weapon'),\n        height: 150,\n        alt: \"character weapon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: this.getItemImagePath('armor'),\n        height: 155,\n        alt: \"character weapon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: this.getItemImagePath('shield'),\n        height: 150,\n        alt: \"character weapon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })))));\n    } else {\n      return React.createElement(Spinner, {\n        className: \"loading-spinner\",\n        animation: \"border\",\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Character;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/Character.jsx"],"names":["React","Jumbotron","Container","Row","Col","CHARACTER_PATH","ITEM_STAT_DISPLAY_NAME","Image","Spinner","OverlayTrigger","Popover","Tooltip","Character","Component","constructor","props","getItemImagePath","gameItemType","state","characterData","getItemDescription","item","stats","Object","keys","map","statName","statDisplayName","isLoading","componentDidMount","sendGetRequest","then","response","setState","render","console","log","offset"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../styles/Character.css';\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {CHARACTER_PATH, ITEM_STAT_DISPLAY_NAME} from \"../constants/routes\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\nclass Character extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            characterData: {},\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.sendGetRequest(CHARACTER_PATH)\r\n            .then((response) => {\r\n                this.setState({characterData: response['data']});\r\n                this.setState({isLoading: false});\r\n            })\r\n    }\r\n    getItemImagePath = (gameItemType) => {\r\n        return this.state.characterData['items'][gameItemType]['image_path'];\r\n    };\r\n\r\n    getItemDescription = (gameItemType) => {\r\n        const item = this.state.characterData['items'][gameItemType];\r\n        let stats = \"\";\r\n        Object.keys(ITEM_STAT_DISPLAY_NAME).map(function(statName, statDisplayName) {\r\n            stats += {statDisplayName} + ': ' + item[statName] + \"<br />\";\r\n        });\r\n        return (\r\n            <Tooltip id=\"tooltip-bottom\">\r\n                <strong>{item['name']}</strong> <br />\r\n                <small>{item['slot']}</small>\r\n\r\n            </Tooltip>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        console.log(this.state.characterData);\r\n\r\n        if (!this.state.isLoading) {\r\n            return (\r\n                <Jumbotron className=\"character-view\">\r\n                    <Container>\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col md={0}>\r\n                                <h3>{this.state.characterData['name']}</h3>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col md={0}>\r\n                                <OverlayTrigger\r\n                                    trigger=\"hover\"\r\n                                    placement=\"bottom\"\r\n                                    overlay={this.getItemDescription('helmet')}\r\n                                >\r\n                                    <Image\r\n                                        src={this.getItemImagePath('helmet')}\r\n                                        height={50}\r\n                                        alt=\"character helmet\"\r\n                                    />\r\n                                </OverlayTrigger>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col\r\n                            lg={{offset: 6}} md={{offset: 6}} sm={{offset: 6}}\r\n                            xl={{offset: 6}} xs={{offset: 6}}>\r\n                                <Image\r\n                                    src={this.getItemImagePath('amulet')}\r\n                                    height={40}\r\n                                    alt=\"character amulet\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col md=\"auto\">\r\n                            <Image\r\n                                    src={this.getItemImagePath('weapon')}\r\n                                    height={150}\r\n                                    alt=\"character weapon\"\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col md=\"auto\">\r\n                            <Image\r\n                                    src={this.getItemImagePath('armor')}\r\n                                    height={155}\r\n                                    alt=\"character weapon\"\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col md=\"auto\">\r\n                            <Image\r\n                                    src={this.getItemImagePath('shield')}\r\n                                    height={150}\r\n                                    alt=\"character weapon\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Jumbotron>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Spinner\r\n                    className='loading-spinner'\r\n                    animation=\"border\"\r\n                    variant=\"primary\"\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Character;"]},"metadata":{},"sourceType":"module"}