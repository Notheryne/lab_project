{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\Manage.jsx\";\nimport React from 'react';\nimport '../styles/Manage.css';\nimport { MANAGE_PATH } from \"../constants/routes\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Manage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      accountData: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.sendGetRequest(MANAGE_PATH).then(response => {\n      this.setState({\n        accountData: response['data']\n      });\n      console.log(response);\n    }).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  render() {\n    const alertsClassName = \"ml-auto mr-auto mt-2 mb-2 w-75\";\n    return React.createElement(Jumbotron, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      variant: \"dark\",\n      className: alertsClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Username: \", this.state.accountData['name'])), React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      className: alertsClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Character Name: \", this.state.accountData['character_name'])), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formCharacterNameChange\",\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"New Character Name\"), React.createElement(Col, {\n      md: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"username\",\n      placeholder: \"Character name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nexport default Manage;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/Manage.jsx"],"names":["React","MANAGE_PATH","Jumbotron","Row","Alert","Dropdown","Accordion","Card","Form","Col","Button","Manage","Component","constructor","props","state","isLoading","accountData","componentDidMount","sendGetRequest","then","response","setState","console","log","catch","error","render","alertsClassName","Header"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../styles/Manage.css';\r\nimport {MANAGE_PATH} from \"../constants/routes\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Manage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            accountData: '',\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.sendGetRequest(MANAGE_PATH)\r\n            .then((response) => {\r\n                this.setState({accountData: response['data']});\r\n                console.log(response);\r\n            }).catch((error) => {\r\n                console.log(error.response);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const alertsClassName = \"ml-auto mr-auto mt-2 mb-2 w-75\";\r\n        return (\r\n            <Jumbotron className=\"text-center\">\r\n                <Alert variant=\"dark\" className={alertsClassName}>\r\n                    <h2>Username: {this.state.accountData['name']}</h2>\r\n                </Alert>\r\n                <Accordion defaultActiveKey=\"0\" className={alertsClassName}>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                            <h4>Character Name: {this.state.accountData['character_name']}</h4>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body>\r\n                                <Form>\r\n                                    <Form.Group as={Row} controlId=\"formCharacterNameChange\" className=\"mb-0\">\r\n                                        <Form.Label column md={4}>\r\n                                            New Character Name\r\n                                        </Form.Label>\r\n                                        <Col md={7}>\r\n                                            <Form.Control type=\"username\" placeholder=\"Character name\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Manage;"]},"metadata":{},"sourceType":"module"}