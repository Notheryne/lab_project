{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Login from \"./components/NotLoggedIn/Login\"; // import NotLoggedInMenu from \"./components/NotLoggedIn/NotLoggedInMenu\";\n\nimport Menu from './components/Menu';\nimport Character from \"./components/Character\";\nimport Button from \"react-bootstrap/Button\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiBaseUrl: 'http://127.0.0.1:5000/api',\n      storedTokens: false\n    };\n  }\n\n  automaticLogin() {\n    axios.get(this.state.apiBaseUrl + '/character', {\n      headers: {\n        Authorization: 'Bearer ' + window.localStorage.getItem('access_token')\n      }\n    }).then(function (response) {\n      if (response['data']['msg'] === 'Missing Authorization Header') {} else {\n        this.setState({\n          storedTokens: true\n        });\n      }\n    });\n  }\n\n  render() {\n    this.automaticLogin();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.storedTokens ? React.createElement(Character, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      apiBaseUrl: this.state.apiBaseUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), \"}\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/App.jsx"],"names":["React","axios","Login","Menu","Character","Button","App","Component","constructor","props","state","apiBaseUrl","storedTokens","automaticLogin","get","headers","Authorization","window","localStorage","getItem","then","response","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AAEA,OAAOC,KAAP,MAAkB,gCAAlB,C,CACA;;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,2BADH;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAKH;;AAEDC,EAAAA,cAAc,GAAG;AACbZ,IAAAA,KAAK,CAACa,GAAN,CAAU,KAAKJ,KAAL,CAAWC,UAAX,GAAwB,YAAlC,EAAgD;AAC5CI,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE,YAAYC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B;AADtB;AADmC,KAAhD,EAIGC,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvB,UAAIA,QAAQ,CAAC,MAAD,CAAR,CAAiB,KAAjB,MAA4B,8BAAhC,EAAgE,CAAE,CAAlE,MACK;AACD,aAAKC,QAAL,CAAc;AACVV,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH;AACJ,KAXD;AAYH;;AAEDW,EAAAA,MAAM,GAAG;AACL,SAAKV,cAAL;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWE,YAAX,GAA0B,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,GAA0C,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/C,MADJ;AAUH;;AArC6B;;AAwClC,eAAeL,GAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './App.css';\r\n\r\nimport Login from \"./components/NotLoggedIn/Login\";\r\n// import NotLoggedInMenu from \"./components/NotLoggedIn/NotLoggedInMenu\";\r\n\r\nimport Menu from './components/Menu';\r\nimport Character from \"./components/Character\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiBaseUrl: 'http://127.0.0.1:5000/api',\r\n            storedTokens: false,\r\n        }\r\n\r\n    }\r\n\r\n    automaticLogin() {\r\n        axios.get(this.state.apiBaseUrl + '/character', {\r\n            headers: {\r\n                Authorization: 'Bearer ' + window.localStorage.getItem('access_token'),\r\n            }\r\n        }).then(function(response) {\r\n            if (response['data']['msg'] === 'Missing Authorization Header') {}\r\n            else {\r\n                this.setState({\r\n                    storedTokens: true,\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        this.automaticLogin();\r\n        return (\r\n            <div>\r\n                {this.state.storedTokens ? <Character /> : <Login apiBaseUrl={this.state.apiBaseUrl} />}\r\n                }\r\n            {/*<Login apiBaseUrl={this.state.apiBaseUrl}/>*/}\r\n\r\n            {/*<Menu />*/}\r\n            {/*<Character />*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}