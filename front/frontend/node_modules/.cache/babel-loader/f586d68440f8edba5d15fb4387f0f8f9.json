{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\Expedition.jsx\";\nimport React from 'react';\nimport '../styles/Expedition.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { ENEMY_STAT_DISPLAY_NAME, EXPEDITION_PATH } from \"../constants/routes\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { Image } from \"react-bootstrap\";\nimport CharacterStats from \"./SubComponents/CharacterStats\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Expedition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enemyData: {},\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.sendGetRequest(EXPEDITION_PATH).then(response => {\n      this.setState({\n        enemyData: response['data']['enemy']\n      });\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  render() {\n    console.log(this.state.enemyData);\n\n    if (!this.state.isLoading) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: this.state.enemyData['image_path'],\n        alt: \"monster image\",\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.enemyData['name'])), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(CharacterStats, {\n        toRender: ENEMY_STAT_DISPLAY_NAME,\n        characterData: this.state.enemyData,\n        sendPostRequest: this.props.sendPostRequest,\n        manageStats: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: {\n          span: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"warning\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Attack\"))));\n    } else {\n      return React.createElement(Spinner, {\n        animation: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Expedition;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/Expedition.jsx"],"names":["React","Container","Row","Col","ENEMY_STAT_DISPLAY_NAME","EXPEDITION_PATH","Spinner","Image","CharacterStats","Button","Expedition","Component","constructor","props","state","enemyData","isLoading","componentDidMount","sendGetRequest","then","response","setState","catch","error","console","log","render","sendPostRequest","span"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../styles/Expedition.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {ENEMY_STAT_DISPLAY_NAME, EXPEDITION_PATH} from \"../constants/routes\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport {Image} from \"react-bootstrap\";\r\nimport CharacterStats from \"./SubComponents/CharacterStats\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Expedition extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            enemyData: {},\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.sendGetRequest(EXPEDITION_PATH)\r\n            .then((response) => {\r\n                this.setState({enemyData: response['data']['enemy']});\r\n                this.setState({isLoading: false});\r\n            }).catch((error) => {\r\n                console.log(error.response);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.enemyData);\r\n        if (!this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Image\r\n                            src={this.state.enemyData['image_path']}\r\n                            alt=\"monster image\"\r\n                            height={300}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <h3>{this.state.enemyData['name']}</h3>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <CharacterStats\r\n                            toRender={ENEMY_STAT_DISPLAY_NAME}\r\n                            characterData={this.state.enemyData}\r\n                            sendPostRequest={this.props.sendPostRequest}\r\n                            manageStats={false}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md={{span: 3}}>\r\n                            <Button variant=\"warning\" block>\r\n                                Attack\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return <Spinner  animation=\"primary\"/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Expedition;"]},"metadata":{},"sourceType":"module"}