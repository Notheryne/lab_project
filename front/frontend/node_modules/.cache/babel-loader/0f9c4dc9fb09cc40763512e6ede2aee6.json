{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\Arena.jsx\";\nimport React from 'react';\nimport '../styles/Arena.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { ARENA_FIGHT_PATH, ARENA_PATH, CHARACTER_STAT_DISPLAY_NAME } from \"../constants/routes\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport CharacterEquipment from \"./SubComponents/CharacterEquipment\";\nimport CharacterStats from \"./SubComponents/CharacterStats\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport FightResult from \"./SubComponents/FightResult\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nclass Arena extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.performArenaFight = () => {\n      this.props.sendPostRequest(ARENA_FIGHT_PATH, {\n        defender_id: this.state.enemyData['id']\n      }).then(response => {\n        this.setState({\n          fightData: response['data']\n        });\n        this.setState({\n          showResult: true\n        });\n        this.setState({\n          buttonActive: false\n        });\n      }).catch(error => {\n        this.setState({\n          status: error.response['data']['message']\n        });\n      });\n    };\n\n    this.state = {\n      enemyData: {},\n      fightData: {},\n      isLoading: true,\n      status: '',\n      showResult: false,\n      buttonActive: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.sendGetRequest(ARENA_PATH).then(response => {\n      console.log(response);\n      this.setState({\n        enemyData: response['data']['enemy']\n      });\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  render() {\n    console.log(this.state.enemyData);\n\n    if (!this.state.isLoading) {\n      return React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(CharacterEquipment, {\n        characterData: this.state.enemyData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(CharacterStats, {\n        toRender: CHARACTER_STAT_DISPLAY_NAME,\n        characterData: this.state.enemyData,\n        sendPostRequest: this.props.sendPostRequest,\n        manageStats: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"justify-content-center row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"text-center\",\n        variant: \"warning\",\n        size: \"lg\",\n        onClick: this.performArenaFight,\n        active: this.state.buttonActive,\n        disabled: !this.state.buttonActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Attack\"))), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.status))), React.createElement(FightResult, {\n        show: this.state.showResult,\n        fightCourse: this.state.fightData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(Spinner, {\n        animation: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Arena;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/Arena.jsx"],"names":["React","Row","Col","ARENA_FIGHT_PATH","ARENA_PATH","CHARACTER_STAT_DISPLAY_NAME","Spinner","CharacterEquipment","CharacterStats","Button","Container","FightResult","Jumbotron","Arena","Component","constructor","props","performArenaFight","sendPostRequest","defender_id","state","enemyData","then","response","setState","fightData","showResult","buttonActive","catch","error","status","isLoading","componentDidMount","sendGetRequest","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../styles/Arena.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {ARENA_FIGHT_PATH, ARENA_PATH, CHARACTER_STAT_DISPLAY_NAME} from \"../constants/routes\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport CharacterEquipment from \"./SubComponents/CharacterEquipment\";\r\nimport CharacterStats from \"./SubComponents/CharacterStats\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport FightResult from \"./SubComponents/FightResult\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n\r\nclass Arena extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            enemyData: {},\r\n            fightData: {},\r\n            isLoading: true,\r\n            status: '',\r\n            showResult: false,\r\n            buttonActive: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.sendGetRequest(ARENA_PATH)\r\n            .then((response) => {\r\n                console.log(response);\r\n                this.setState({enemyData: response['data']['enemy']});\r\n                this.setState({isLoading: false});\r\n            }).catch((error) => {\r\n                console.log(error.response);\r\n        })\r\n    }\r\n\r\n    performArenaFight = () => {\r\n        this.props.sendPostRequest(ARENA_FIGHT_PATH, {defender_id: this.state.enemyData['id']})\r\n            .then((response) => {\r\n                this.setState({fightData: response['data']});\r\n                this.setState({showResult: true});\r\n                this.setState({buttonActive: false});\r\n            }).catch((error) => {\r\n            this.setState({status: error.response['data']['message']});\r\n        });\r\n    };\r\n\r\n    render() {\r\n        console.log(this.state.enemyData);\r\n        if (!this.state.isLoading) {\r\n            return (\r\n                <Jumbotron>\r\n                    <Container className=\"justify-content-center\">\r\n                        <CharacterEquipment\r\n                            characterData={this.state.enemyData}\r\n                        />\r\n                    </Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md=\"auto\">\r\n                            <CharacterStats\r\n                                toRender={CHARACTER_STAT_DISPLAY_NAME}\r\n                                characterData={this.state.enemyData}\r\n                                sendPostRequest={this.props.sendPostRequest}\r\n                                manageStats={false}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center row\">\r\n                        <Col md={\"auto\"}>\r\n                            <Button\r\n                                className=\"text-center\"\r\n                                variant=\"warning\"\r\n                                size=\"lg\"\r\n                                onClick={this.performArenaFight}\r\n                                active={this.state.buttonActive}\r\n                                disabled={!this.state.buttonActive}\r\n                            >\r\n                                Attack\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md={\"auto\"}>\r\n                            <p>{this.state.status}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <FightResult\r\n                        show={this.state.showResult}\r\n                        fightCourse={this.state.fightData}\r\n                    />\r\n                </Jumbotron>\r\n            );\r\n        } else {\r\n            return (\r\n                <Spinner animation=\"primary\" />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Arena;"]},"metadata":{},"sourceType":"module"}