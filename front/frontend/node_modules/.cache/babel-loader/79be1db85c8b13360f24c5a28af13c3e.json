{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\SubComponents\\\\FightResult.jsx\";\nimport React, { Component } from 'react';\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../../styles/FightResult.css\";\n\nclass FightResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRounds = () => {\n      const roundsDescription = this.props.fightCourse['rounds'];\n      const rounds = roundsDescription.map((roundData, roundNumber) => {\n        const round = 'Round #' + (roundNumber + 1);\n        let attacker_misc;\n        let defender_misc;\n\n        if (roundData['attacker_critical'] && roundData['defender_dodge']) {\n          attacker_misc = '(critical, dodged).';\n        } else if (roundData['attacker_critical']) {\n          attacker_misc = '(critical).';\n        } else if (roundData['defender_dodge']) {\n          attacker_misc = '(dodged).';\n        } else {\n          attacker_misc = '.';\n        }\n\n        if (roundData['defender_critical'] && roundData['attacker_dodge']) {\n          defender_misc = '(critical, dodged).';\n        } else if (roundData['defender_critical']) {\n          defender_misc = '(critical).';\n        } else if (roundData['attacker_dodge']) {\n          defender_misc = '(dodged).';\n        } else {\n          defender_misc = '.';\n        }\n\n        const attacker = 'Attacker did ' + roundData['attacker_damage'] + ' damage' + attacker_misc;\n        const defender = 'Defender did ' + roundData['defender_damage'] + ' damage' + defender_misc;\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          key: round,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, round), React.createElement(\"li\", {\n          key: round + '_attacker',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, attacker), React.createElement(\"li\", {\n          key: round + '_defender',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, defender));\n      });\n      return React.createElement(\"ol\", {\n        key: \"rounds-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, rounds);\n    };\n\n    this.state = {\n      roundsReady: false\n    };\n  }\n\n  render() {\n    if (this.props.show) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Accordion, {\n        defaultActiveKey: \"0\",\n        className: \"fight-result-accordion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        eventKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Winner:\", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.props.fightCourse['winner'] ? \" You!\" : \" Not you\")), React.createElement(Accordion.Collapse, {\n        eventKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.renderRounds())))));\n    }\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default FightResult;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/SubComponents/FightResult.jsx"],"names":["React","Component","Spinner","Accordion","Card","FightResult","constructor","props","renderRounds","roundsDescription","fightCourse","rounds","map","roundData","roundNumber","round","attacker_misc","defender_misc","attacker","defender","state","roundsReady","render","show","Header"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"../../styles/FightResult.css\";\r\n\r\nclass FightResult extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roundsReady: false,\r\n        }\r\n    }\r\n\r\n\r\n    renderRounds = () => {\r\n        const roundsDescription = this.props.fightCourse['rounds'];\r\n        const rounds = roundsDescription.map((roundData, roundNumber) => {\r\n            const round = 'Round #' + (roundNumber + 1);\r\n            let attacker_misc;\r\n            let defender_misc;\r\n\r\n            if (roundData['attacker_critical'] && roundData['defender_dodge']) {\r\n                attacker_misc = '(critical, dodged).';\r\n            } else if (roundData['attacker_critical']) {\r\n                attacker_misc = '(critical).';\r\n            } else if (roundData['defender_dodge']) {\r\n                attacker_misc = '(dodged).';\r\n            } else {\r\n                attacker_misc = '.';\r\n            }\r\n\r\n            if (roundData['defender_critical'] && roundData['attacker_dodge']) {\r\n                defender_misc = '(critical, dodged).';\r\n            } else if (roundData['defender_critical']) {\r\n                defender_misc = '(critical).';\r\n            } else if (roundData['attacker_dodge']) {\r\n                defender_misc = '(dodged).';\r\n            } else {\r\n                defender_misc = '.';\r\n            }\r\n\r\n            const attacker = 'Attacker did ' + roundData['attacker_damage'] + ' damage' + attacker_misc;\r\n            const defender = 'Defender did ' + roundData['defender_damage'] + ' damage' + defender_misc;\r\n            return (\r\n                <React.Fragment>\r\n                    <h3 key={round}>{round}</h3>\r\n                    <li key={round + '_attacker'}>{attacker}</li>\r\n                    <li key={round + '_defender'}>{defender}</li>\r\n                </React.Fragment>\r\n            );\r\n        });\r\n        return (\r\n            <ol key={\"rounds-list\"}>\r\n                {rounds}\r\n            </ol>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        if (this.props.show) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Accordion defaultActiveKey=\"0\" className=\"fight-result-accordion\">\r\n                        <Card>\r\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                Winner:\r\n                                <strong>\r\n                                    {\r\n                                        this.props.fightCourse['winner']\r\n                                        ? \" You!\"\r\n                                        : \" Not you\"\r\n                                    }\r\n                                </strong>\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>\r\n                                    {this.renderRounds()}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return <p></p>\r\n    }\r\n}\r\n\r\nexport default FightResult;"]},"metadata":{},"sourceType":"module"}