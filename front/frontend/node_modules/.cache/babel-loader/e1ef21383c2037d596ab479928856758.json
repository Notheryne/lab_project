{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\Arena.jsx\";\nimport React from 'react';\nimport '../styles/Arena.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { ARENA_PATH } from \"../constants/routes\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport CharacterEquipment from \"./SubComponents/CharacterEquipment\";\nimport CharacterStats from \"./SubComponents/CharacterStats\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Arena extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enemyData: {},\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.sendGetRequest(ARENA_PATH).then(response => {\n      this.setState({\n        enemyData: response['data']['enemy']\n      });\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  render() {\n    console.log(this.state.enemyData);\n\n    if (!this.state.isLoading) {\n      const md = 6;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(CharacterEquipment, {\n        characterData: this.state.enemyData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(CharacterStats, {\n        characterData: this.state.enemyData,\n        sendPostRequest: this.props.sendPostRequest,\n        manageStats: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        block: true,\n        variant: \"warning\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Attack\"))));\n    } else {\n      return React.createElement(Spinner, {\n        className: \"loading-spinner\",\n        animation: \"border\",\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Arena;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/Arena.jsx"],"names":["React","Container","Row","Col","ARENA_PATH","Spinner","CharacterEquipment","CharacterStats","Button","Arena","Component","constructor","props","state","enemyData","isLoading","componentDidMount","sendGetRequest","then","response","setState","catch","error","console","log","render","md","sendPostRequest"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWK,cAAX,CAA0Bb,UAA1B,EACKc,IADL,CACWC,QAAD,IAAc;AAChB,WAAKC,QAAL,CAAc;AAACN,QAAAA,SAAS,EAAEK,QAAQ,CAAC,MAAD,CAAR,CAAiB,OAAjB;AAAZ,OAAd;AACA,WAAKC,QAAL,CAAc;AAACL,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACH,KAJL,EAIOM,KAJP,CAIcC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACH,QAAlB;AACP,KAND;AAOH;;AAEDM,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,SAAvB;;AACA,QAAI,CAAC,KAAKD,KAAL,CAAWE,SAAhB,EAA2B;AACvB,YAAMW,EAAE,GAAG,CAAX;AACA,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,kBAAD;AACI,QAAA,aAAa,EAAE,KAAKb,KAAL,CAAWC,SAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAII,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACI,QAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,SAD9B;AAEI,QAAA,eAAe,EAAE,KAAKF,KAAL,CAAWe,eAFhC;AAGI,QAAA,WAAW,EAAE,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAJJ,EAaI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AACI,QAAA,OAAO,EAAC,SADZ;AAEI,QAAA,IAAI,EAAC,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,CAbJ,CADJ;AA0BH,KA5BD,MA4BO;AACH,aACI,oBAAC,OAAD;AACI,QAAA,SAAS,EAAC,iBADd;AAEI,QAAA,SAAS,EAAC,QAFd;AAGI,QAAA,OAAO,EAAC,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH;AACJ;;AAzD+B;;AA4DpC,eAAelB,KAAf","sourcesContent":["import React from 'react';\r\nimport '../styles/Arena.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {ARENA_PATH} from \"../constants/routes\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport CharacterEquipment from \"./SubComponents/CharacterEquipment\";\r\nimport CharacterStats from \"./SubComponents/CharacterStats\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Arena extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            enemyData: {},\r\n            isLoading: true,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.sendGetRequest(ARENA_PATH)\r\n            .then((response) => {\r\n                this.setState({enemyData: response['data']['enemy']});\r\n                this.setState({isLoading: false});\r\n            }).catch((error) => {\r\n                console.log(error.response);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.enemyData);\r\n        if (!this.state.isLoading) {\r\n            const md = 6;\r\n            return (\r\n                <React.Fragment>\r\n                    <CharacterEquipment\r\n                        characterData={this.state.enemyData}\r\n                    />\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md=\"auto\">\r\n                            <CharacterStats\r\n                                characterData={this.state.enemyData}\r\n                                sendPostRequest={this.props.sendPostRequest}\r\n                                manageStats={false}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md={\"auto\"}>\r\n                            <Button block\r\n                                variant=\"warning\"\r\n                                size=\"lg\"\r\n                            >\r\n                                Attack\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <Spinner\r\n                    className='loading-spinner'\r\n                    animation=\"border\"\r\n                    variant=\"primary\"\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Arena;"]},"metadata":{},"sourceType":"module"}