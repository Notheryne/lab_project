{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\SubComponents\\\\CharacterEquipment.jsx\";\nimport React, { Component } from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { ITEM_STAT_DISPLAY_NAME, PLACEHOLDER_IMAGES } from \"../../constants/routes\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Image from \"react-bootstrap/Image\";\n\nclass CharacterEquipment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getItemImagePath = gameItemType => {\n      return this.props.characterData['items'][gameItemType]['image_path'];\n    };\n\n    this.getItemDescription = gameItemType => {\n      const item = this.props.characterData['items'][gameItemType];\n      const stats = Object.keys(ITEM_STAT_DISPLAY_NAME).map(statName => {\n        return React.createElement(\"p\", {\n          key: statName,\n          className: \"item-description-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, ITEM_STAT_DISPLAY_NAME[statName], \": \", item[statName]);\n      });\n      return React.createElement(Tooltip, {\n        id: \"tooltip-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, item['name']), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, item['slot']), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), stats);\n    };\n\n    this.renderImageWithDescription = (gameItemType, gameItemHeight) => {\n      if (gameItemType in this.props.characterData['items']) {\n        return React.createElement(OverlayTrigger, {\n          trigger: \"hover\",\n          placement: \"bottom\",\n          overlay: this.getItemDescription(gameItemType),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: this.getItemImagePath(gameItemType),\n          height: gameItemHeight,\n          alt: \"character \" + gameItemType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Image, {\n          src: PLACEHOLDER_IMAGES[gameItemType],\n          height: gameItemHeight,\n          alt: \"character \" + gameItemType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  render() {\n    const amuletOffset = 7;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.renderImageWithDescription('helmet', 75))), React.createElement(Row, {\n      className: \"justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: {\n        offset: amuletOffset\n      },\n      md: {\n        offset: amuletOffset\n      },\n      sm: {\n        offset: amuletOffset\n      },\n      xl: {\n        offset: amuletOffset\n      },\n      xs: {\n        offset: amuletOffset\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.renderImageWithDescription('amulet', 35))), React.createElement(Row, {\n      className: \"justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.renderImageWithDescription('weapon', 150)), React.createElement(Col, {\n      md: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.renderImageWithDescription('armor', 155)), React.createElement(Col, {\n      md: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.renderImageWithDescription('shield', 150))));\n  }\n\n}\n\nexport default CharacterEquipment;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/SubComponents/CharacterEquipment.jsx"],"names":["React","Component","Row","Col","ITEM_STAT_DISPLAY_NAME","PLACEHOLDER_IMAGES","Tooltip","OverlayTrigger","Image","CharacterEquipment","getItemImagePath","gameItemType","props","characterData","getItemDescription","item","stats","Object","keys","map","statName","renderImageWithDescription","gameItemHeight","render","amuletOffset","offset"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {ITEM_STAT_DISPLAY_NAME, PLACEHOLDER_IMAGES} from \"../../constants/routes\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nclass CharacterEquipment extends Component {\r\n    getItemImagePath = (gameItemType) => {\r\n        return this.props.characterData['items'][gameItemType]['image_path'];\r\n    };\r\n\r\n    getItemDescription = (gameItemType) => {\r\n        const item = this.props.characterData['items'][gameItemType];\r\n        const stats = Object.keys(ITEM_STAT_DISPLAY_NAME).map(statName => {\r\n            return (\r\n                <p key={statName} className=\"item-description-row\">{ITEM_STAT_DISPLAY_NAME[statName]}: {item[statName]}</p>\r\n            );\r\n        });\r\n        return (\r\n            <Tooltip id=\"tooltip-bottom\">\r\n                <strong>{item['name']}</strong> <br/>\r\n                <small>{item['slot']}</small> <br/>\r\n                {stats}\r\n            </Tooltip>\r\n        );\r\n    };\r\n\r\n    renderImageWithDescription = (gameItemType, gameItemHeight) => {\r\n        if (gameItemType in this.props.characterData['items']) {\r\n            return (\r\n                <OverlayTrigger\r\n                    trigger=\"hover\"\r\n                    placement=\"bottom\"\r\n                    overlay={this.getItemDescription(gameItemType)}\r\n                >\r\n                    <Image\r\n                        src={this.getItemImagePath(gameItemType)}\r\n                        height={gameItemHeight}\r\n                        alt={\"character \" + gameItemType}\r\n                    />\r\n                </OverlayTrigger>\r\n            )\r\n        } else {\r\n            return (\r\n                <Image\r\n                    src={PLACEHOLDER_IMAGES[gameItemType]}\r\n                    height={gameItemHeight}\r\n                    alt={\"character \" + gameItemType}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const amuletOffset = 7;\r\n        return (\r\n            <React.Fragment>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md={0}>\r\n                        {this.renderImageWithDescription('helmet', 75)}\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col\r\n                        lg={{offset: amuletOffset}} md={{offset: amuletOffset}} sm={{offset: amuletOffset}}\r\n                        xl={{offset: amuletOffset}} xs={{offset: amuletOffset}}>\r\n                        {this.renderImageWithDescription('amulet', 35)}\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md=\"auto\">\r\n                        {this.renderImageWithDescription('weapon', 150)}\r\n                    </Col>\r\n\r\n                    <Col md=\"auto\">\r\n                        {this.renderImageWithDescription('armor', 155)}\r\n                    </Col>\r\n\r\n                    <Col md=\"auto\">\r\n                        {this.renderImageWithDescription('shield', 150)}\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CharacterEquipment;"]},"metadata":{},"sourceType":"module"}