{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\SubComponents\\\\FightResult.jsx\";\nimport React, { Component } from 'react';\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../../styles/FightResult.css\";\n\nclass FightResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRounds = () => {\n      const roundsDescription = this.props.fightCourse['rounds'];\n      const rounds = roundsDescription.map((roundNumber, roundData) => {\n        const round = 'Round #' + (roundData + 1);\n        let attacker_misc;\n        let defender_misc;\n\n        if (roundData['attacker_critical'] && roundData['defender_dodge']) {\n          attacker_misc = '(critical, dodged).';\n        } else if (roundData['attacker_critical']) {\n          attacker_misc = '(critical).';\n        } else if (roundData['defender_dodge']) {\n          attacker_misc = '(dodged).';\n        } else {\n          attacker_misc = '.';\n        }\n\n        if (roundData['defender_critical'] && roundData['attacker_dodge']) {\n          defender_misc = '(critical, dodged).';\n        } else if (roundData['defender_critical']) {\n          defender_misc = '(critical).';\n        } else if (roundData['attacker_dodge']) {\n          defender_misc = '(dodged).';\n        } else {\n          defender_misc = '.';\n        }\n\n        const attacker = 'Attacker did ' + React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"roundData['attacker_damage']\") + ' damage' + attacker_misc;\n        const defender = 'Defender did ' + React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"roundData['defender_damage']\") + ' damage' + defender_misc;\n        return React.createElement(Accordion, {\n          defaultActiveKey: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Accordion.Toggle, {\n          as: Card.Header,\n          eventKey: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, round)), React.createElement(Accordion.Collapse, {\n          eventKey: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, attacker), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, defender))));\n      });\n    };\n\n    this.state = {\n      roundsReady: false\n    };\n  }\n\n  render() {\n    if (this.props.show) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Accordion, {\n        defaultActiveKey: \"0\",\n        className: \"fight-result-accordion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        eventKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Winner:\", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.fightCourse['winner'] ? \" You!\" : \" Not you\")), React.createElement(Accordion.Collapse, {\n        eventKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.renderRounds())))));\n    }\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default FightResult;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/SubComponents/FightResult.jsx"],"names":["React","Component","Spinner","Accordion","Card","FightResult","constructor","props","renderRounds","roundsDescription","fightCourse","rounds","map","roundNumber","roundData","round","attacker_misc","defender_misc","attacker","defender","Header","state","roundsReady","render","show"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"../../styles/FightResult.css\";\r\n\r\nclass FightResult extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roundsReady: false,\r\n        }\r\n    }\r\n\r\n\r\n    renderRounds = () => {\r\n        const roundsDescription = this.props.fightCourse['rounds'];\r\n        const rounds = roundsDescription.map((roundNumber, roundData) => {\r\n            const round = 'Round #' + (roundData + 1);\r\n            let attacker_misc;\r\n            let defender_misc;\r\n\r\n            if (roundData['attacker_critical'] && roundData['defender_dodge']) {\r\n                attacker_misc = '(critical, dodged).';\r\n            } else if (roundData['attacker_critical']) {\r\n                attacker_misc = '(critical).';\r\n            } else if (roundData['defender_dodge']) {\r\n                attacker_misc = '(dodged).';\r\n            } else {\r\n                attacker_misc = '.';\r\n            }\r\n\r\n            if (roundData['defender_critical'] && roundData['attacker_dodge']) {\r\n                defender_misc = '(critical, dodged).';\r\n            } else if (roundData['defender_critical']) {\r\n                defender_misc = '(critical).';\r\n            } else if (roundData['attacker_dodge']) {\r\n                defender_misc = '(dodged).';\r\n            } else {\r\n                defender_misc = '.';\r\n            }\r\n\r\n            const attacker = 'Attacker did ' + <strong>roundData['attacker_damage']</strong>\r\n                + ' damage' + attacker_misc;\r\n            const defender = 'Defender did ' + <strong>roundData['defender_damage']</strong>\r\n                + ' damage' + defender_misc;\r\n            return (\r\n                <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                            <strong>{round}</strong>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <p>{attacker}</p>\r\n                            <p>{defender}</p>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            )\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.show) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Accordion defaultActiveKey=\"0\" className=\"fight-result-accordion\">\r\n                        <Card>\r\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                Winner:\r\n                                <strong>\r\n                                    {\r\n                                        this.props.fightCourse['winner']\r\n                                        ? \" You!\"\r\n                                        : \" Not you\"\r\n                                    }\r\n                                </strong>\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>\r\n                                    {this.renderRounds()}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return <p></p>\r\n    }\r\n}\r\n\r\nexport default FightResult;"]},"metadata":{},"sourceType":"module"}