{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\App.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport '../styles/App.css';\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Login from \"./Authentication/Login\";\nimport Character from \"./Character\";\nimport Arena from \"./Arena\";\nimport Expedition from \"./Expedition\";\nimport ArmorTrader from \"./NPC/ArmorTrader\";\nimport WeaponTrader from \"./NPC/WeaponTrader\";\nimport Healer from \"./NPC/Healer\";\nimport Manage from \"./Manage\";\nimport Logout from \"./Logout\";\nimport Menu from \"./Menu\";\nimport NotLoggedInMenu from \"./Authentication/NotLoggedInMenu\";\nimport { REFRESH_PATH } from \"../constants/routes\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setIsAuthenticated = newAuthenticationStatus => {\n      this.setState({\n        isAuthenticated: newAuthenticationStatus\n      });\n    };\n\n    this.sendGetRequest = (path, refresh = false) => {\n      const headers = refresh ? {\n        'Authorization': 'Bearer ' + window.localStorage.getItem('refresh_token')\n      } : {\n        'Authorization': 'Bearer ' + window.localStorage.getItem('access_token')\n      };\n      return new Promise((resolve, reject) => {\n        axios.get(path, {\n          headers: headers\n        }).then(response => {\n          resolve(response);\n        }).catch(error => {\n          if (error.response.status === 401) {\n            this.setIsAuthenticated(false);\n          }\n\n          reject(error);\n        });\n      });\n    };\n\n    this.sendPostRequest = (path, data, refresh = false) => {\n      const headers = refresh ? {\n        'Authorization': 'Bearer ' + window.localStorage.getItem('refresh_token')\n      } : {\n        'Authorization': 'Bearer ' + window.localStorage.getItem('access_token')\n      };\n      return new Promise((resolve, reject) => {\n        axios.post(path, data, {\n          headers: headers\n        }).then(response => {\n          resolve(response);\n        }).catch(error => {\n          if (error.response.status === 401) {\n            this.setIsAuthenticated(false);\n          }\n\n          reject(error);\n        });\n      });\n    };\n\n    this.state = {\n      isAuthenticated: false,\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.sendGetRequest(REFRESH_PATH, true).then(response => {\n      console.log(\"APP DID MOUNT\");\n      console.log(response);\n      this.setIsAuthenticated(true);\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setIsAuthenticated(false);\n      this.setState({\n        isLoading: false\n      });\n      console.log(error.response);\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(Spinner, {\n        className: \"loading-spinner\",\n        animation: \"border\",\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(Menu, {\n      className: \"top-side-menu\",\n      sendPostRequest: this.sendPostRequest,\n      setIsAuthenticated: this.setIsAuthenticated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }) : React.createElement(NotLoggedInMenu, {\n      className: \"top-side-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/character\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, !this.state.isAuthenticated ? React.createElement(Login, {\n      setIsAuthenticated: this.setIsAuthenticated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/character\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/character\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(Character, {\n      sendGetRequest: this.sendGetRequest,\n      sendPostRequest: this.sendPostRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/arena\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(Arena, {\n      sendGetRequest: this.sendGetRequest,\n      sendPostRequest: this.sendPostRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/expedition\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(Expedition, {\n      sendGetRequest: this.sendGetRequest,\n      sendPostRequest: this.sendPostRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/npc/armor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(ArmorTrader, {\n      sendGetRequest: this.sendGetRequest,\n      sendPostRequest: this.sendPostRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/npc/weapon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(WeaponTrader, {\n      sendGetRequest: this.sendGetRequest,\n      sendPostRequest: this.sendPostRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/npc/healer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(Healer, {\n      sendGetRequest: this.sendGetRequest,\n      sendPostRequest: this.sendPostRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/manage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(Manage, {\n      sendGetRequest: this.sendGetRequest,\n      sendPostRequest: this.sendPostRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(Logout, {\n      sendGetRequest: this.sendGetRequest,\n      sendPostRequest: this.sendPostRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/App.jsx"],"names":["React","axios","Route","Switch","Redirect","Spinner","Login","Character","Arena","Expedition","ArmorTrader","WeaponTrader","Healer","Manage","Logout","Menu","NotLoggedInMenu","REFRESH_PATH","App","Component","constructor","props","setIsAuthenticated","newAuthenticationStatus","setState","isAuthenticated","sendGetRequest","path","refresh","headers","window","localStorage","getItem","Promise","resolve","reject","get","then","response","catch","error","status","sendPostRequest","data","post","state","isLoading","componentDidMount","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport '../styles/App.css';\r\n\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport Login from \"./Authentication/Login\";\r\n\r\nimport Character from \"./Character\";\r\nimport Arena from \"./Arena\";\r\nimport Expedition from \"./Expedition\";\r\n\r\nimport ArmorTrader from \"./NPC/ArmorTrader\";\r\nimport WeaponTrader from \"./NPC/WeaponTrader\";\r\nimport Healer from \"./NPC/Healer\";\r\n\r\nimport Manage from \"./Manage\";\r\nimport Logout from \"./Logout\";\r\n\r\nimport Menu from \"./Menu\";\r\nimport NotLoggedInMenu from \"./Authentication/NotLoggedInMenu\";\r\n\r\nimport { REFRESH_PATH } from \"../constants/routes\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isAuthenticated: false,\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sendGetRequest(REFRESH_PATH, true)\r\n            .then((response) => {\r\n                console.log(\"APP DID MOUNT\");\r\n                console.log(response);\r\n                this.setIsAuthenticated(true);\r\n                this.setState({isLoading: false});\r\n            }).catch((error) => {\r\n                this.setIsAuthenticated(false);\r\n                this.setState({isLoading: false});\r\n                console.log(error.response);\r\n        });\r\n    };\r\n\r\n    setIsAuthenticated = (newAuthenticationStatus) => {\r\n        this.setState({isAuthenticated: newAuthenticationStatus});\r\n    };\r\n\r\n    sendGetRequest = (path, refresh=false) => {\r\n        const headers = refresh\r\n        ?\r\n            { 'Authorization': 'Bearer ' + window.localStorage.getItem('refresh_token') }\r\n        :\r\n            { 'Authorization': 'Bearer ' + window.localStorage.getItem('access_token') };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(path, {\r\n                headers: headers,\r\n            }).then((response) => {\r\n                resolve(response);\r\n            }).catch((error) => {\r\n                if (error.response.status === 401) {\r\n                    this.setIsAuthenticated(false);\r\n                }\r\n                reject(error);\r\n            })\r\n        })\r\n    };\r\n\r\n    sendPostRequest = (path, data, refresh=false) => {\r\n        const headers = refresh\r\n            ?\r\n            { 'Authorization': 'Bearer ' + window.localStorage.getItem('refresh_token') }\r\n            :\r\n            { 'Authorization': 'Bearer ' + window.localStorage.getItem('access_token') };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            axios.post(path, data,{\r\n                headers: headers,\r\n            }).then((response) => {\r\n                resolve(response);\r\n            }).catch((error) => {\r\n                if (error.response.status === 401) {\r\n                    this.setIsAuthenticated(false);\r\n                }\r\n                reject(error);\r\n            })\r\n        })\r\n    };\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner\r\n                    className='loading-spinner'\r\n                    animation=\"border\"\r\n                    variant=\"primary\"\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.isAuthenticated\r\n                ?\r\n                    <Menu className=\"top-side-menu\"\r\n                        sendPostRequest={this.sendPostRequest}\r\n                        setIsAuthenticated={this.setIsAuthenticated}\r\n                    />\r\n                : <NotLoggedInMenu className=\"top-side-menu\" />\r\n                }\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        {\r\n                            this.state.isAuthenticated\r\n                                ? <Redirect to=\"/login\" />\r\n                                : <Redirect to=\"/character\" />\r\n                        }\r\n                    </Route>\r\n                    <Route exact path=\"/login\">\r\n                        {\r\n                            !this.state.isAuthenticated\r\n                                ? <Login setIsAuthenticated={this.setIsAuthenticated} />\r\n                                : <Redirect to=\"/character\" />\r\n                        }\r\n                    </Route>\r\n\r\n                    <Route path=\"/character\">\r\n                        {\r\n                            this.state.isAuthenticated\r\n                                ?\r\n                                <Character\r\n                                    sendGetRequest={this.sendGetRequest}\r\n                                    sendPostRequest={this.sendPostRequest}\r\n                                />\r\n                                : <Redirect to=\"/login\" />\r\n                        }\r\n                    </Route>\r\n\r\n                    <Route path=\"/arena\">\r\n                        {\r\n                            this.state.isAuthenticated\r\n                                ?\r\n                                <Arena\r\n                                    sendGetRequest={this.sendGetRequest}\r\n                                    sendPostRequest={this.sendPostRequest}\r\n                                />\r\n                                : <Redirect to=\"/login\" />\r\n                        }\r\n                    </Route>\r\n\r\n                    <Route path=\"/expedition\">\r\n                        {\r\n                            this.state.isAuthenticated\r\n                                ?\r\n                                <Expedition\r\n                                    sendGetRequest={this.sendGetRequest}\r\n                                    sendPostRequest={this.sendPostRequest}\r\n                                />\r\n                                : <Redirect to=\"/login\" />\r\n                        }\r\n                    </Route>\r\n\r\n                    <Route path=\"/npc/armor\">\r\n                        {\r\n                            this.state.isAuthenticated\r\n                                ?\r\n                                <ArmorTrader\r\n                                    sendGetRequest={this.sendGetRequest}\r\n                                    sendPostRequest={this.sendPostRequest}\r\n                                />\r\n                                : <Redirect to=\"/login\" />\r\n                        }\r\n                    </Route>\r\n\r\n                    <Route path=\"/npc/weapon\">\r\n                        {\r\n                            this.state.isAuthenticated\r\n                                ?\r\n                                <WeaponTrader\r\n                                    sendGetRequest={this.sendGetRequest}\r\n                                    sendPostRequest={this.sendPostRequest}\r\n                                />\r\n                                : <Redirect to=\"/login\" />\r\n                        }\r\n                    </Route>\r\n\r\n                    <Route path=\"/npc/healer\">\r\n                        {\r\n                            this.state.isAuthenticated\r\n                                ? <\r\n                                Healer\r\n                                    sendGetRequest={this.sendGetRequest}\r\n                                    sendPostRequest={this.sendPostRequest}\r\n                                />\r\n                                : <Redirect to=\"/login\" />\r\n                        }\r\n                    </Route>\r\n\r\n                    <Route path=\"/manage\">\r\n                        {\r\n                            this.state.isAuthenticated\r\n                                ?\r\n                                <Manage\r\n                                    sendGetRequest={this.sendGetRequest}\r\n                                    sendPostRequest={this.sendPostRequest}\r\n                                />\r\n                                : <Redirect to=\"/login\" />\r\n                        }\r\n                    </Route>\r\n\r\n                    <Route path=\"/logout\">\r\n                        {\r\n                            this.state.isAuthenticated\r\n                                ?\r\n                                <Logout\r\n                                    sendGetRequest={this.sendGetRequest}\r\n                                    sendPostRequest={this.sendPostRequest}\r\n                                />\r\n                                : <Redirect to=\"/login\" />\r\n                        }\r\n                    </Route>\r\n                </Switch>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}