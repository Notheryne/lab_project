{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programowanie\\\\front\\\\frontend\\\\src\\\\components\\\\Ranking.jsx\";\nimport React, { Component } from 'react';\nimport { RANKING_HEADERS_DISPLAY, RANKING_PATH } from \"../constants/routes\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Ranking extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRankingData = () => {\n      console.log('SORTBY', this.state.sortBy);\n      const params = {\n        'sort_by': this.state.sortBy,\n        'page': this.state.activePage,\n        'price': this.state.price,\n        'order': this.state.order\n      };\n      this.props.sendGetRequestWithData(RANKING_PATH, params).then(response => {\n        this.setState({\n          characters: response['data']['characters']\n        });\n        console.log(params);\n        console.log(response);\n        this.setState({\n          isLoading: false\n        });\n      }).catch(error => {\n        console.log(\"ERROR\");\n        console.log(error.response);\n        this.setState({\n          errorStatus: error.response['data']['message']\n        });\n      });\n    };\n\n    this.handleTableHeaderClick = header => {\n      this.setState({\n        isLoading: true\n      });\n\n      if (this.state.sortBy !== header) {\n        console.log(header + ' is other');\n        this.setState({\n          sortBy: header\n        });\n      } else {\n        if (this.state.order === 'desc') {\n          this.setState({\n            order: 'asc'\n          });\n        } else {\n          this.setState({\n            order: 'desc'\n          });\n        }\n      }\n\n      this.getRankingData();\n    };\n\n    this.renderTableHead = () => {\n      const headers = Object.keys(RANKING_HEADERS_DISPLAY).map(header => {\n        return React.createElement(\"th\", {\n          onClick: () => this.handleTableHeaderClick(header),\n          key: header,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, RANKING_HEADERS_DISPLAY[header]);\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        onClick: () => {\n          this.handleTableHeaderClick('experience');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Character Name\"), headers);\n    };\n\n    this.renderTableRows = () => {\n      const characters = this.state.characters;\n      return Object.keys(this.state.characters).map(characterNumber => {\n        const characterData = characters[characterNumber];\n        const stats = Object.keys(characterData).map(characterStat => {\n          return React.createElement(\"td\", {\n            key: characterData['name'] + '-' + characterStat,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, characterData[characterStat]);\n        });\n        return React.createElement(\"tr\", {\n          key: characterNumber,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, characterNumber), stats);\n      });\n    };\n\n    this.state = {\n      isLoading: true,\n      activePage: 1,\n      maxPages: -1,\n      tableHeaders: [],\n      characters: {},\n      price: 0,\n      sortBy: 'experience',\n      order: 'desc',\n      errorStatus: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getRankingData();\n  }\n\n  render() {\n    if (!this.state.isLoading) {\n      return React.createElement(Table, {\n        bordered: true,\n        hover: true,\n        striped: true,\n        className: \"w-75 ml-auto mr-auto text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.renderTableHead())), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.renderTableRows()));\n    } else {\n      return React.createElement(Spinner, {\n        animation: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Ranking;","map":{"version":3,"sources":["D:/Programowanie/front/frontend/src/components/Ranking.jsx"],"names":["React","Component","RANKING_HEADERS_DISPLAY","RANKING_PATH","Spinner","Jumbotron","Table","Button","Ranking","constructor","props","getRankingData","console","log","state","sortBy","params","activePage","price","order","sendGetRequestWithData","then","response","setState","characters","isLoading","catch","error","errorStatus","handleTableHeaderClick","header","renderTableHead","headers","Object","keys","map","renderTableRows","characterNumber","characterData","stats","characterStat","maxPages","tableHeaders","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {RANKING_HEADERS_DISPLAY, RANKING_PATH} from \"../constants/routes\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Ranking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            activePage: 1,\r\n            maxPages: -1,\r\n            tableHeaders: [],\r\n            characters: {},\r\n            price: 0,\r\n            sortBy: 'experience',\r\n            order: 'desc',\r\n            errorStatus: '',\r\n        }\r\n    }\r\n\r\n    getRankingData = () => {\r\n        console.log('SORTBY', this.state.sortBy);\r\n        const params = {\r\n            'sort_by': this.state.sortBy,\r\n            'page': this.state.activePage,\r\n            'price': this.state.price,\r\n            'order': this.state.order,\r\n        };\r\n        this.props.sendGetRequestWithData(RANKING_PATH, params)\r\n            .then((response) => {\r\n                this.setState({characters: response['data']['characters']});\r\n                console.log(params);\r\n                console.log(response);\r\n                this.setState({isLoading: false})\r\n            }).catch((error) => {\r\n            console.log(\"ERROR\");\r\n            console.log(error.response);\r\n            this.setState({errorStatus: error.response['data']['message']});\r\n        })\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getRankingData();\r\n    }\r\n\r\n    handleTableHeaderClick = (header) => {\r\n        this.setState({isLoading: true});\r\n        if (this.state.sortBy !== header) {\r\n            console.log(header + ' is other');\r\n            this.setState({sortBy: header});\r\n        } else {\r\n            if (this.state.order === 'desc') { this.setState({order: 'asc'}) }\r\n            else { this.setState({order: 'desc'}) }\r\n        }\r\n        this.getRankingData();\r\n    };\r\n\r\n    renderTableHead = () => {\r\n        const headers = Object.keys(RANKING_HEADERS_DISPLAY).map(header => {\r\n            return (\r\n                <th onClick={() => this.handleTableHeaderClick(header)} key={header}>\r\n                    {RANKING_HEADERS_DISPLAY[header]}\r\n                </th>\r\n            )});\r\n        return (\r\n            <React.Fragment>\r\n                <th onClick={() => {this.handleTableHeaderClick('experience')}}>#</th>\r\n                <th>Character Name</th>\r\n                {headers}\r\n            </React.Fragment>\r\n        )};\r\n\r\n    renderTableRows = () => {\r\n        const characters = this.state.characters;\r\n        return Object.keys(this.state.characters).map(characterNumber => {\r\n            const characterData = characters[characterNumber];\r\n            const stats = Object.keys(characterData).map(characterStat => {\r\n                return <td key={characterData['name'] + '-' + characterStat}>{characterData[characterStat]}</td>\r\n            });\r\n            return (\r\n                <tr key={characterNumber}>\r\n                    <td>{characterNumber}</td>\r\n                    {stats}\r\n                </tr>\r\n            )\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.isLoading) {\r\n            return (\r\n                <Table bordered hover striped className=\"w-75 ml-auto mr-auto text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            {this.renderTableHead()}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTableRows()}\r\n                    </tbody>\r\n                </Table>\r\n            );\r\n        } else {\r\n            return <Spinner animation=\"primary\" />\r\n        }\r\n    }\r\n}\r\n\r\nexport default Ranking;"]},"metadata":{},"sourceType":"module"}